$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:core.impl////PointingToDeclaration/planning/core.impl/index.html
$dokka.location:core.impl/Context.Companion///PointingToDeclaration/planning/core.impl/-context/-companion/index.html
$dokka.location:core.impl/Context.Companion/empty/#/PointingToDeclaration/planning/core.impl/-context/-companion/empty.html
$dokka.location:core.impl/Context.Companion/of/#kotlin.Array[kotlin.String]/PointingToDeclaration/planning/core.impl/-context/-companion/of.html
$dokka.location:core.impl/Context///PointingToDeclaration/planning/core.impl/-context/index.html
$dokka.location:core.impl/ContextImpl///PointingToDeclaration/planning/core.impl/-context-impl/index.html
$dokka.location:core.impl/ContextImpl/ContextImpl/#it.unibo.tuprolog.core.Scope/PointingToDeclaration/planning/core.impl/-context-impl/-context-impl.html
$dokka.location:core.impl/VariableAssignmentImpl///PointingToDeclaration/planning/core.impl/-variable-assignment-impl/index.html
$dokka.location:core.impl/VariableAssignmentImpl/VariableAssignmentImpl/#core.Variable#core.Value/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/-variable-assignment-impl.html
$dokka.location:core.impl/VariableAssignmentImpl/VariableAssignmentImpl/#it.unibo.tuprolog.core.Substitution/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/-variable-assignment-impl.html
$dokka.location:core.impl/VariableAssignmentImpl/containsKey/#core.Variable/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/contains-key.html
$dokka.location:core.impl/VariableAssignmentImpl/containsValue/#core.Value/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/contains-value.html
$dokka.location:core.impl/VariableAssignmentImpl/entries/#/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/entries.html
$dokka.location:core.impl/VariableAssignmentImpl/get/#core.Variable/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/get.html
$dokka.location:core.impl/VariableAssignmentImpl/isEmpty/#/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/is-empty.html
$dokka.location:core.impl/VariableAssignmentImpl/keys/#/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/keys.html
$dokka.location:core.impl/VariableAssignmentImpl/merge/#core.VariableAssignment/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/merge.html
$dokka.location:core.impl/VariableAssignmentImpl/size/#/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/size.html
$dokka.location:core.impl/VariableAssignmentImpl/values/#/PointingToDeclaration/planning/core.impl/-variable-assignment-impl/values.html
$dokka.location:core.utility////PointingToDeclaration/planning/core.utility/index.html
$dokka.location:core.utility//finalStateComplaintWithGoal/#core.FluentBasedGoal#core.State/PointingToDeclaration/planning/core.utility/final-state-complaint-with-goal.html
$dokka.location:core.utility//then/kotlin.Boolean#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/planning/core.utility/then.html
$dokka.location:core////PointingToDeclaration/planning/core/index.html
$dokka.location:core/Action.Companion///PointingToDeclaration/planning/core/-action/-companion/index.html
$dokka.location:core/Action.Companion/of/#kotlin.String#kotlin.collections.Map[core.Variable,core.Type]#kotlin.collections.Set[core.Fluent]#kotlin.collections.Set[core.Effect]/PointingToDeclaration/planning/core/-action/-companion/of.html
$dokka.location:core/Action///PointingToDeclaration/planning/core/-action/index.html
$dokka.location:core/Action/effects/#/PointingToDeclaration/planning/core/-action/effects.html
$dokka.location:core/Action/name/#/PointingToDeclaration/planning/core/-action/name.html
$dokka.location:core/Action/negativeEffects/#/PointingToDeclaration/planning/core/-action/negative-effects.html
$dokka.location:core/Action/parameters/#/PointingToDeclaration/planning/core/-action/parameters.html
$dokka.location:core/Action/positiveEffects/#/PointingToDeclaration/planning/core/-action/positive-effects.html
$dokka.location:core/Action/preconditions/#/PointingToDeclaration/planning/core/-action/preconditions.html
$dokka.location:core/Applicable///PointingToDeclaration/planning/core/-applicable/index.html
$dokka.location:core/Applicable/apply/#core.VariableAssignment/PointingToDeclaration/planning/core/-applicable/apply.html
$dokka.location:core/Applicable/refresh/#core.impl.Context/PointingToDeclaration/planning/core/-applicable/refresh.html
$dokka.location:core/Axiom.Companion///PointingToDeclaration/planning/core/-axiom/-companion/index.html
$dokka.location:core/Axiom.Companion/of/#kotlin.collections.Map[core.Variable,core.Type]#core.Expression#core.Expression/PointingToDeclaration/planning/core/-axiom/-companion/of.html
$dokka.location:core/Axiom///PointingToDeclaration/planning/core/-axiom/index.html
$dokka.location:core/Axiom/context/#/PointingToDeclaration/planning/core/-axiom/context.html
$dokka.location:core/Axiom/implies/#/PointingToDeclaration/planning/core/-axiom/implies.html
$dokka.location:core/Axiom/parameters/#/PointingToDeclaration/planning/core/-axiom/parameters.html
$dokka.location:core/BinaryExpression.Companion///PointingToDeclaration/planning/core/-binary-expression/-companion/index.html
$dokka.location:core/BinaryExpression.Companion/of/#core.Expression#core.Expression#kotlin.String/PointingToDeclaration/planning/core/-binary-expression/-companion/of.html
$dokka.location:core/BinaryExpression///PointingToDeclaration/planning/core/-binary-expression/index.html
$dokka.location:core/BinaryExpression/expression1/#/PointingToDeclaration/planning/core/-binary-expression/expression1.html
$dokka.location:core/BinaryExpression/expression2/#/PointingToDeclaration/planning/core/-binary-expression/expression2.html
$dokka.location:core/BinaryExpression/operand/#/PointingToDeclaration/planning/core/-binary-expression/operand.html
$dokka.location:core/Domain.Companion///PointingToDeclaration/planning/core/-domain/-companion/index.html
$dokka.location:core/Domain.Companion/of/#kotlin.String#kotlin.collections.Set[core.Predicate]#kotlin.collections.Set[core.Action]#kotlin.collections.Set[core.Type]#core.Axiom?/PointingToDeclaration/planning/core/-domain/-companion/of.html
$dokka.location:core/Domain///PointingToDeclaration/planning/core/-domain/index.html
$dokka.location:core/Domain/actions/#/PointingToDeclaration/planning/core/-domain/actions.html
$dokka.location:core/Domain/axioms/#/PointingToDeclaration/planning/core/-domain/axioms.html
$dokka.location:core/Domain/name/#/PointingToDeclaration/planning/core/-domain/name.html
$dokka.location:core/Domain/predicates/#/PointingToDeclaration/planning/core/-domain/predicates.html
$dokka.location:core/Domain/types/#/PointingToDeclaration/planning/core/-domain/types.html
$dokka.location:core/Effect.Companion///PointingToDeclaration/planning/core/-effect/-companion/index.html
$dokka.location:core/Effect.Companion/negative/#core.Fluent/PointingToDeclaration/planning/core/-effect/-companion/negative.html
$dokka.location:core/Effect.Companion/of/#core.Fluent#kotlin.Boolean/PointingToDeclaration/planning/core/-effect/-companion/of.html
$dokka.location:core/Effect.Companion/positive/#core.Fluent/PointingToDeclaration/planning/core/-effect/-companion/positive.html
$dokka.location:core/Effect///PointingToDeclaration/planning/core/-effect/index.html
$dokka.location:core/Effect/fluent/#/PointingToDeclaration/planning/core/-effect/fluent.html
$dokka.location:core/Effect/isPositive/#/PointingToDeclaration/planning/core/-effect/is-positive.html
$dokka.location:core/Effect/match/#core.Effect/PointingToDeclaration/planning/core/-effect/match.html
$dokka.location:core/Effect/mostGeneralUnifier/#core.Effect/PointingToDeclaration/planning/core/-effect/most-general-unifier.html
$dokka.location:core/Expression///PointingToDeclaration/planning/core/-expression/index.html
$dokka.location:core/Expression/and/#core.Expression/PointingToDeclaration/planning/core/-expression/and.html
$dokka.location:core/Expression/not/#/PointingToDeclaration/planning/core/-expression/not.html
$dokka.location:core/Expression/or/#core.Expression/PointingToDeclaration/planning/core/-expression/or.html
$dokka.location:core/Fluent.Companion///PointingToDeclaration/planning/core/-fluent/-companion/index.html
$dokka.location:core/Fluent.Companion/negative/#core.Predicate#kotlin.Array[core.Value]/PointingToDeclaration/planning/core/-fluent/-companion/negative.html
$dokka.location:core/Fluent.Companion/of/#core.Predicate#kotlin.Boolean#kotlin.Array[core.Value]/PointingToDeclaration/planning/core/-fluent/-companion/of.html
$dokka.location:core/Fluent.Companion/of/#core.Predicate#kotlin.Boolean#kotlin.collections.List[core.Value]/PointingToDeclaration/planning/core/-fluent/-companion/of.html
$dokka.location:core/Fluent.Companion/positive/#core.Predicate#kotlin.Array[core.Value]/PointingToDeclaration/planning/core/-fluent/-companion/positive.html
$dokka.location:core/Fluent///PointingToDeclaration/planning/core/-fluent/index.html
$dokka.location:core/Fluent/args/#/PointingToDeclaration/planning/core/-fluent/args.html
$dokka.location:core/Fluent/instanceOf/#/PointingToDeclaration/planning/core/-fluent/instance-of.html
$dokka.location:core/Fluent/isGround/#/PointingToDeclaration/planning/core/-fluent/is-ground.html
$dokka.location:core/Fluent/isNegated/#/PointingToDeclaration/planning/core/-fluent/is-negated.html
$dokka.location:core/Fluent/match/#core.Fluent/PointingToDeclaration/planning/core/-fluent/match.html
$dokka.location:core/Fluent/mostGeneralUnifier/#core.Fluent/PointingToDeclaration/planning/core/-fluent/most-general-unifier.html
$dokka.location:core/Fluent/name/#/PointingToDeclaration/planning/core/-fluent/name.html
$dokka.location:core/Fluent/negate/#/PointingToDeclaration/planning/core/-fluent/negate.html
$dokka.location:core/FluentBasedGoal.Companion///PointingToDeclaration/planning/core/-fluent-based-goal/-companion/index.html
$dokka.location:core/FluentBasedGoal.Companion/of/#kotlin.Array[core.Fluent]/PointingToDeclaration/planning/core/-fluent-based-goal/-companion/of.html
$dokka.location:core/FluentBasedGoal.Companion/of/#kotlin.collections.Set[core.Fluent]/PointingToDeclaration/planning/core/-fluent-based-goal/-companion/of.html
$dokka.location:core/FluentBasedGoal///PointingToDeclaration/planning/core/-fluent-based-goal/index.html
$dokka.location:core/FluentBasedGoal/targets/#/PointingToDeclaration/planning/core/-fluent-based-goal/targets.html
$dokka.location:core/Goal///PointingToDeclaration/planning/core/-goal/index.html
$dokka.location:core/Goal/isSatisfiedBy/#core.State/PointingToDeclaration/planning/core/-goal/is-satisfied-by.html
$dokka.location:core/NotUnifiableException///PointingToDeclaration/planning/core/-not-unifiable-exception/index.html
$dokka.location:core/NotUnifiableException/NotUnifiableException/#kotlin.Any#kotlin.Any#kotlin.Throwable?/PointingToDeclaration/planning/core/-not-unifiable-exception/-not-unifiable-exception.html
$dokka.location:core/NotUnifiableException/first/#/PointingToDeclaration/planning/core/-not-unifiable-exception/first.html
$dokka.location:core/NotUnifiableException/second/#/PointingToDeclaration/planning/core/-not-unifiable-exception/second.html
$dokka.location:core/Object.Companion///PointingToDeclaration/planning/core/-object/-companion/index.html
$dokka.location:core/Object.Companion/of/#kotlin.Double/PointingToDeclaration/planning/core/-object/-companion/of.html
$dokka.location:core/Object.Companion/of/#kotlin.Int/PointingToDeclaration/planning/core/-object/-companion/of.html
$dokka.location:core/Object.Companion/of/#kotlin.Long/PointingToDeclaration/planning/core/-object/-companion/of.html
$dokka.location:core/Object.Companion/of/#kotlin.String/PointingToDeclaration/planning/core/-object/-companion/of.html
$dokka.location:core/Object///PointingToDeclaration/planning/core/-object/index.html
$dokka.location:core/Object/apply/#core.VariableAssignment/PointingToDeclaration/planning/core/-object/apply.html
$dokka.location:core/Object/refresh/#core.impl.Context/PointingToDeclaration/planning/core/-object/refresh.html
$dokka.location:core/Object/representation/#/PointingToDeclaration/planning/core/-object/representation.html
$dokka.location:core/ObjectSet.Companion///PointingToDeclaration/planning/core/-object-set/-companion/index.html
$dokka.location:core/ObjectSet.Companion/of/#kotlin.Array[kotlin.Pair[core.Type,kotlin.collections.Set[core.Object]]]/PointingToDeclaration/planning/core/-object-set/-companion/of.html
$dokka.location:core/ObjectSet.Companion/of/#kotlin.collections.Map[core.Type,kotlin.collections.Set[core.Object]]/PointingToDeclaration/planning/core/-object-set/-companion/of.html
$dokka.location:core/ObjectSet///PointingToDeclaration/planning/core/-object-set/index.html
$dokka.location:core/ObjectSet/map/#/PointingToDeclaration/planning/core/-object-set/map.html
$dokka.location:core/Operator.Companion///PointingToDeclaration/planning/core/-operator/-companion/index.html
$dokka.location:core/Operator.Companion/of/#core.Action/PointingToDeclaration/planning/core/-operator/-companion/of.html
$dokka.location:core/Operator///PointingToDeclaration/planning/core/-operator/index.html
$dokka.location:core/Operator/args/#/PointingToDeclaration/planning/core/-operator/args.html
$dokka.location:core/Plan.Companion///PointingToDeclaration/planning/core/-plan/-companion/index.html
$dokka.location:core/Plan.Companion/of/#kotlin.collections.List[core.Operator]/PointingToDeclaration/planning/core/-plan/-companion/of.html
$dokka.location:core/Plan///PointingToDeclaration/planning/core/-plan/index.html
$dokka.location:core/Plan/operators/#/PointingToDeclaration/planning/core/-plan/operators.html
$dokka.location:core/Planner.Companion///PointingToDeclaration/planning/core/-planner/-companion/index.html
$dokka.location:core/Planner.Companion/strips/#/PointingToDeclaration/planning/core/-planner/-companion/strips.html
$dokka.location:core/Planner///PointingToDeclaration/planning/core/-planner/index.html
$dokka.location:core/Planner/plan/#core.Problem/PointingToDeclaration/planning/core/-planner/plan.html
$dokka.location:core/Predicate.Companion///PointingToDeclaration/planning/core/-predicate/-companion/index.html
$dokka.location:core/Predicate.Companion/of/#kotlin.String#kotlin.Array[core.Type]/PointingToDeclaration/planning/core/-predicate/-companion/of.html
$dokka.location:core/Predicate.Companion/of/#kotlin.String#kotlin.collections.List[core.Type]/PointingToDeclaration/planning/core/-predicate/-companion/of.html
$dokka.location:core/Predicate///PointingToDeclaration/planning/core/-predicate/index.html
$dokka.location:core/Predicate/arguments/#/PointingToDeclaration/planning/core/-predicate/arguments.html
$dokka.location:core/Predicate/name/#/PointingToDeclaration/planning/core/-predicate/name.html
$dokka.location:core/Problem.Companion///PointingToDeclaration/planning/core/-problem/-companion/index.html
$dokka.location:core/Problem.Companion/of/#core.Domain#core.ObjectSet#core.State#core.Goal/PointingToDeclaration/planning/core/-problem/-companion/of.html
$dokka.location:core/Problem///PointingToDeclaration/planning/core/-problem/index.html
$dokka.location:core/Problem/domain/#/PointingToDeclaration/planning/core/-problem/domain.html
$dokka.location:core/Problem/goal/#/PointingToDeclaration/planning/core/-problem/goal.html
$dokka.location:core/Problem/initialState/#/PointingToDeclaration/planning/core/-problem/initial-state.html
$dokka.location:core/Problem/objects/#/PointingToDeclaration/planning/core/-problem/objects.html
$dokka.location:core/State.Companion///PointingToDeclaration/planning/core/-state/-companion/index.html
$dokka.location:core/State.Companion/of/#kotlin.Array[core.Fluent]/PointingToDeclaration/planning/core/-state/-companion/of.html
$dokka.location:core/State.Companion/of/#kotlin.collections.Set[core.Fluent]/PointingToDeclaration/planning/core/-state/-companion/of.html
$dokka.location:core/State///PointingToDeclaration/planning/core/-state/index.html
$dokka.location:core/State/apply/#core.Operator/PointingToDeclaration/planning/core/-state/apply.html
$dokka.location:core/State/fluents/#/PointingToDeclaration/planning/core/-state/fluents.html
$dokka.location:core/State/isApplicable/#core.Action/PointingToDeclaration/planning/core/-state/is-applicable.html
$dokka.location:core/Type.Companion///PointingToDeclaration/planning/core/-type/-companion/index.html
$dokka.location:core/Type.Companion/of/#kotlin.String#core.Type?/PointingToDeclaration/planning/core/-type/-companion/of.html
$dokka.location:core/Type///PointingToDeclaration/planning/core/-type/index.html
$dokka.location:core/Type/name/#/PointingToDeclaration/planning/core/-type/name.html
$dokka.location:core/Type/superType/#/PointingToDeclaration/planning/core/-type/super-type.html
$dokka.location:core/UnaryExpression.Companion///PointingToDeclaration/planning/core/-unary-expression/-companion/index.html
$dokka.location:core/UnaryExpression.Companion/of/#core.Expression#kotlin.String/PointingToDeclaration/planning/core/-unary-expression/-companion/of.html
$dokka.location:core/UnaryExpression///PointingToDeclaration/planning/core/-unary-expression/index.html
$dokka.location:core/UnaryExpression/expression/#/PointingToDeclaration/planning/core/-unary-expression/expression.html
$dokka.location:core/UnaryExpression/operand/#/PointingToDeclaration/planning/core/-unary-expression/operand.html
$dokka.location:core/Value///PointingToDeclaration/planning/core/-value/index.html
$dokka.location:core/Value/isGround/#/PointingToDeclaration/planning/core/-value/is-ground.html
$dokka.location:core/Variable.Companion///PointingToDeclaration/planning/core/-variable/-companion/index.html
$dokka.location:core/Variable.Companion/of/#kotlin.String/PointingToDeclaration/planning/core/-variable/-companion/of.html
$dokka.location:core/Variable///PointingToDeclaration/planning/core/-variable/index.html
$dokka.location:core/Variable/name/#/PointingToDeclaration/planning/core/-variable/name.html
$dokka.location:core/Variable/refresh/#core.impl.Context/PointingToDeclaration/planning/core/-variable/refresh.html
$dokka.location:core/VariableAssignment.Companion///PointingToDeclaration/planning/core/-variable-assignment/-companion/index.html
$dokka.location:core/VariableAssignment.Companion/empty/#/PointingToDeclaration/planning/core/-variable-assignment/-companion/empty.html
$dokka.location:core/VariableAssignment.Companion/of/#core.Variable#core.Value/PointingToDeclaration/planning/core/-variable-assignment/-companion/of.html
$dokka.location:core/VariableAssignment///PointingToDeclaration/planning/core/-variable-assignment/index.html
$dokka.location:core/VariableAssignment/merge/#core.VariableAssignment/PointingToDeclaration/planning/core/-variable-assignment/merge.html
core
core.impl
core.utility

